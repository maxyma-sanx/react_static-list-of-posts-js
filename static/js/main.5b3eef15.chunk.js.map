{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","name","email","body","className","href","CommentList","comments","map","id","UserInfo","user","PostInfo","post","title","length","PostList","posts","postsFromServer","userId","usersFromServer","find","commendId","commentsFromServer","filter","postId","App","ReactDOM","render","document","getElementById"],"mappings":"018IAAaA,EAAc,SAAC,GAAD,QAAGC,QAAWC,EAAd,EAAcA,KAAMC,EAApB,EAAoBA,MAAOC,EAA3B,EAA2BA,KAA3B,OACzB,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCH,IAEtC,OAED,mBACEG,UAAU,qBACVC,KAAI,iBAAYH,GAFlB,SAIGA,OAIL,qBAAKE,UAAU,oBAAf,SACGD,QCbMG,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,qBAAKH,UAAU,cAAf,SACGG,EACEC,KAAI,SAAAR,GAAO,OAAI,cAAC,EAAD,CAAaA,QAASA,GAAcA,EAAQS,UCJrDC,G,MAAW,SAAC,GAAD,QAAGC,KAAQV,EAAX,EAAWA,KAAMC,EAAjB,EAAiBA,MAAjB,OACtB,mBAAGE,UAAU,WAAWC,KAAI,iBAAYH,GAAxC,SACGD,MCAQW,EAAW,SAAC,GAAD,QAAGC,KAAQV,EAAX,EAAWA,KAAMW,EAAjB,EAAiBA,MAAOP,EAAxB,EAAwBA,SAAUI,EAAlC,EAAkCA,KAAlC,OACtB,sBAAKP,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCU,IAEjC,8BACG,eAED,cAAC,EAAD,CAAUH,KAAMA,UAIpB,mBAAGP,UAAU,iBAAb,SACGD,IAGH,uBAGsB,IAApBI,EAASQ,OACL,mBAAG,UAAQ,oBAAX,6BACA,cAAC,EAAD,CAAaR,SAAUA,QCvBpBS,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,mCAAGA,EAAMT,KAAI,SAAAK,GAAI,OAAI,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKJ,UCYvD,IAAMQ,EAAQC,EAAgBV,KAAI,SAAAK,GAAI,kCACjCA,GADiC,IAEpCF,MANmBQ,EAMDN,EAAKM,OALhBC,EAAgBC,MAAK,SAAAV,GAAI,OAAIA,EAAKF,KAAOU,MAMhDZ,UAXsBe,EAWGT,EAAKJ,GAVvBc,EAAmBC,QAAO,SAAAxB,GAAO,OAAIA,EAAQyB,SAAWH,QADjE,IAAwBA,EAIHH,KAURO,EAAM,kBACjB,0BAAStB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCACA,qBAAKA,UAAU,WAAf,SACE,cAAC,EAAD,CAAUa,MAAOA,UCrBvBU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5b3eef15.chunk.js","sourcesContent":["export const CommentInfo = ({ comment: { name, email, body } }) => (\n  <div className=\"CommentInfo\">\n    <div className=\"CommentInfo__title\">\n      <strong className=\"CommentInfo__name\">{name}</strong>\n\n      {' by '}\n\n      <a\n        className=\"CommentInfo__email\"\n        href={`mailto:${email}`}\n      >\n        {email}\n      </a>\n    </div>\n\n    <div className=\"CommentInfo__body\">\n      {body}\n    </div>\n  </div>\n);\n","import './CommentList.scss';\nimport { CommentInfo } from '../CommentInfo';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    {comments\n      .map(comment => <CommentInfo comment={comment} key={comment.id} />)\n    }\n  </div>\n);\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ user: { name, email } }) => (\n  <a className=\"UserInfo\" href={`mailto:${email}`}>\n    {name}\n  </a>\n);\n","import './PostInfo.scss';\nimport { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\n\nexport const PostInfo = ({ post: { body, title, comments, user } }) => (\n  <div className=\"PostInfo\">\n    <div className=\"PostInfo__header\">\n      <h3 className=\"PostInfo__title\">{title}</h3>\n\n      <p>\n        {' Posted by  '}\n\n        <UserInfo user={user} />\n      </p>\n    </div>\n\n    <p className=\"PostInfo__body\">\n      {body}\n    </p>\n\n    <hr />\n\n    {\n      comments.length === 0\n        ? <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n        : <CommentList comments={comments} />\n    }\n  </div>\n);\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <>{posts.map(post => <PostInfo post={post} key={post.id} />)}</>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\nimport { PostList } from './components/PostList';\n\nfunction getCommentById(commendId) {\n  return commentsFromServer.filter(comment => comment.postId === commendId);\n}\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId);\n}\n\nconst posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUserById(post.userId),\n  comments: getCommentById(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n    <div className=\"PostList\">\n      <PostList posts={posts} />\n    </div>\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}